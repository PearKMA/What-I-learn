#Code
  AudioManager am = null;

// Request focus for music stream and pass AudioManager.OnAudioFocusChangeListener
// implementation reference
int result = am.requestAudioFocus(this, AudioManager.STREAM_MUSIC, 
                AudioManager.AUDIOFOCUS_GAIN);

if(result == AudioManager.AUDIOFOCUS_REQUEST_GRANTED)
{
    // Play
}

// Implements AudioManager.OnAudioFocusChangeListener

@Override
public void onAudioFocusChange(int focusChange) 
{
    if(focusChange == AudioManager.AUDIOFOCUS_LOSS_TRANSIENT)
    {
        // Pause
    }
    else if(focusChange == AudioManager.AUDIOFOCUS_GAIN)
    {
        // Resume
    }
    else if(focusChange == AudioManager.AUDIOFOCUS_LOSS)
    {
        // Stop or pause depending on your need
    }
}



#eg
void disableAudioOtherApp() {
        if (getActivity() != null) {
            AudioManager mAudioManager = (AudioManager) getActivity().getSystemService(Context.AUDIO_SERVICE);
            if (mAudioManager != null) {
                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
                    mAudioManager.requestAudioFocus(new AudioFocusRequest.Builder(AudioManager.AUDIOFOCUS_GAIN)
                            .setAudioAttributes(
                                    new AudioAttributes.Builder()
                                            .setUsage(AudioAttributes.USAGE_MEDIA)
                                            .setContentType(AudioAttributes.CONTENT_TYPE_MUSIC)
                                            .build()
                            )
                            .setAcceptsDelayedFocusGain(true)
                            .setOnAudioFocusChangeListener(focusChange -> {
                                //Handle Focus Change
                                if (focusChange == AudioManager.AUDIOFOCUS_GAIN) {
                                    isCallingOrAlarm(false);
                                } else if (focusChange == AudioManager.AUDIOFOCUS_LOSS_TRANSIENT) {
                                    isCallingOrAlarm(true);
                                }
                            }).build()
                    );
                } else {
                    mAudioManager.requestAudioFocus(focusChange -> {
                                //Handle Focus Change for earliest version of oreo
                                if (focusChange == AudioManager.AUDIOFOCUS_GAIN) {
                                    isCallingOrAlarm(false);
                                } else if (focusChange == AudioManager.AUDIOFOCUS_LOSS_TRANSIENT) {
                                    isCallingOrAlarm(true);
                                }
                            },
                            AudioManager.STREAM_MUSIC,
                            AudioManager.AUDIOFOCUS_GAIN);
                }
            }
        }
    }
